{
	"_id": "549cded04c82af2017cb87ee",
	"name": "wTreeNew",
	"ownerId": "",
	"requestDate": "2014-12-26T04:08:40.692Z",
	"description": "",
	"category": "Re-usable",
	"wtype": "visual",
	"src": "{\n\t\"properties\": {\n\t\t\"title\": {\n\t\t\t\"label\": \"\",\n\t\t\t\"visible\": true,\n\t\t\t\"color\": \"\"\n\t\t},\n\t\t\"tools\": {\n\t\t\t\"color\": true,\n\t\t\t\"edit\": true,\n\t\t\t\"collapse\": true,\n\t\t\t\"fullscreen\": true,\n\t\t\t\"delete\": true\n\t\t},\n\t\t\"sortable\": true\n\t},\n\t\"definition\": [\n\t\t{\n\t\t\t\"id\": \"root\",\n\t\t\t\"type\": \"panel\",\n\t\t\t\"attributes\": {\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"value\": \"pnlPanel1\"\n\t\t\t\t},\n\t\t\t\t\"controller\": {\n\t\t\t\t\t\"value\": \"wTreeNewController\"\n\t\t\t\t},\n\t\t\t\t\"form\": {\n\t\t\t\t\t\"value\": \"wTreeNewForm\"\n\t\t\t\t},\n\t\t\t\t\"model\": {\n\t\t\t\t\t\"value\": \"\"\n\t\t\t\t},\n\t\t\t\t\"useModel\": {\n\t\t\t\t\t\"value\": false\n\t\t\t\t},\n\t\t\t\t\"collapsible\": {\n\t\t\t\t\t\"value\": false\n\t\t\t\t},\n\t\t\t\t\"classes\": {\n\t\t\t\t\t\"value\": \"\"\n\t\t\t\t},\n\t\t\t\t\"style\": {\n\t\t\t\t\t\"value\": \"\"\n\t\t\t\t},\n\t\t\t\t\"display\": {\n\t\t\t\t\t\"value\": \"\"\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"value\": \"\"\n\t\t\t\t},\n\t\t\t\t\"titleVisible\": {\n\t\t\t\t\t\"value\": false\n\t\t\t\t},\n\t\t\t\t\"layout\": {\n\t\t\t\t\t\"rows\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"cols\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"width\": {\n\t\t\t\t\t\t\t\t\t\t\"value\": \"12\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"classes\": {\n\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"dynamicClasses\": {\n\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"style\": {\n\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"classes\": {\n\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"dynamicClasses\": {\n\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"style\": {\n\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"classes\": {\n\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t},\n\t\t\t\t\t\"dynamicClasses\": {\n\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t},\n\t\t\t\t\t\"style\": {\n\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"children\": []\n\t\t}\n\t]\n}",
	"src_script": "// this line should not be removed\nvar wTreeNew = angular.module(\"wTreeNew\",[]);\n\nwTreeNew.controller( \"wTreeNewController\", function( $scope ) {\n\t\n});\n\nwTreeNew.directive('uiTree', [ 'treeConfig', 'keys', '$window',\n    function(treeConfig, keys, $window) {\n      return {\n        restrict: 'EA',\n        scope: {\n          callbacks: '=?',\n          dragEnabled: '=?',\n          emptyPlaceholderEnabled: '=?',\n          maxDepth: '=?',\n          dragDelay: '=?',\n          dragDistance: '=?',\n          lockXKeyString: '=?lockX',\n          lockYKeyString: '=?lockY',\n          boundToString: '=?boundTo',\n          spacing: '=?',\n          coveragePercent: '=?coverage',\n          cancelKeyString: '=?cancelKey',\n          copyKeyString: '=?copyKey',\n          selectKeyString: '=?selectKey',\n          expandOnHover: '=?'\n        },\n        controller: 'TreeController',\n        link: function(scope, element, attrs) {\n          var callbacks = {\n            accept: undefined,\n            beforeDrag: undefined\n          };\n\n          var config = {};\n          angular.extend(config, treeConfig);\n          if (config.treeClass) {\n            element.addClass(config.treeClass);\n          }\n\n          scope.$emptyElm = angular.element($window.document.createElement('div'));\n          if (config.emptyTreeClass) {\n            scope.$emptyElm.addClass(config.emptyTreeClass);\n          }\n\n          // check if the dest node can accept the dragging node\n          // by default, we check the 'nodrop' attribute in `ui-tree-nodes`\n          // and the 'max-depth' attribute in `ui-tree` or `ui-tree-nodes`.\n          // the method can be overrided\n          callbacks.accept = function(sourceNodeScope, destNodesScope, destIndex) {\n            if (destNodesScope.nodrop || destNodesScope.outOfDepth(sourceNodeScope)) {\n              return false;\n            }\n\n            return true;\n          };\n\n          callbacks.collapse = function(node, all) {\n            return true;\n          };\n\n          callbacks.expand = function(node, all) {\n            return true;\n          };\n\n          callbacks.beforeDrag = function(sourceNodeScope) {\n            return true;\n          };\n\n          callbacks.expandTimeoutStart = function() {\n          };\n\n          callbacks.expandTimeoutCancel = function() {\n          };\n\n          callbacks.expandTimeoutEnd = function() {\n            return true;\n          };\n\n          callbacks.remove = function(node) {\n            return true;\n          };\n\n          callbacks.dropped = function(event) {\n          };\n\n          callbacks.droppedInto = function(event) {\n          };\n\n          callbacks.dragStart = function(event) {\n          };\n\n          callbacks.dragMove = function(event) {\n          };\n\n          callbacks.placeholderMove = function(event) {\n          };\n\n          callbacks.dragCancel = function(event) {\n          };\n\n          callbacks.dragStop = function(event) {\n          };\n\n          callbacks.beforeDrop = function(event) {\n            return true;\n          };\n\n          callbacks.lock = function(axis) {\n            return true;\n          };\n\n          callbacks.unlock = function(axis) {\n            return true;\n          };\n\n          callbacks.startCopy = function() {\n            return true;\n          };\n\n          callbacks.endCopy = function() {\n          };\n\n          callbacks.startSelect = function() {\n            return true;\n          };\n\n          callbacks.select = function(node) {\n            return true;\n          };\n\n          callbacks.unselect = function(node) {\n            return true;\n          };\n\n          callbacks.endSelect = function() {\n          };\n\n          scope.$callbacks = callbacks;\n        }\n      };\n    }\n  ]);",
	"src_styles": ".angular-ui-tree {\r\n\r\n}\r\n\r\n.angular-ui-tree-empty {\r\n\tborder: 1px dashed #bbb;\r\n\tmin-height: 100px;\r\n\tbackground-color: #e5e5e5;\r\n\tbackground-image: -webkit-linear-gradient(45deg, #fff 25%, transparent 25%, transparent 75%, #fff 75%, #fff), -webkit-linear-gradient(45deg, #fff 25%, transparent 25%, transparent 75%, #fff 75%, #fff);\r\n\tbackground-image: -moz-linear-gradient(45deg, #fff 25%, transparent 25%, transparent 75%, #fff 75%, #fff), -moz-linear-gradient(45deg, #fff 25%, transparent 25%, transparent 75%, #fff 75%, #fff);\r\n\tbackground-image: linear-gradient(45deg, #fff 25%, transparent 25%, transparent 75%, #fff 75%, #fff), linear-gradient(45deg, #fff 25%, transparent 25%, transparent 75%, #fff 75%, #fff);\r\n\tbackground-size: 60px 60px;\r\n\tbackground-position: 0 0, 30px 30px;\r\n}\r\n\r\n.angular-ui-tree-nodes {\r\n\tposition: relative;\r\n\tmargin: 0px;\r\n\tpadding: 0px;\r\n\tlist-style: none;\r\n}\r\n\r\n.angular-ui-tree-nodes .angular-ui-tree-nodes {\r\n\tpadding-left: 20px;\r\n}\r\n\r\n.angular-ui-tree-node .angular-ui-tree-nodes {\r\n\tmargin-top: 5px;\r\n}\r\n\r\n.angular-ui-tree-node, .angular-ui-tree-placeholder {\r\n\tposition: relative;\r\n\tmargin: 0px;\r\n\tmargin-bottom: 5px;\r\n\tpadding: 0px;\r\n\tmin-height: 20px;\r\n\tmin-width: 200px;\r\n\tline-height: 20px;\r\n}\r\n\r\n.angular-ui-tree-node.selected > .angular-ui-tree-handle, .angular-ui-tree-node.selected .angular-ui-tree-node > .angular-ui-tree-handle {\r\n\tbackground: #DDE7FF;\r\n\tborder: 1px solid black;\r\n}\r\n\r\n.angular-ui-tree-node.original > .angular-ui-tree-handle {\r\n\tbackground: #E2E2E2;\r\n\tborder: 1px solid lightgrey;\r\n}\r\n\r\n.angular-ui-tree-hidden {\r\n\tdisplay: none;\r\n}\r\n\r\n.angular-ui-tree-placeholder {\r\n\tmargin: 5px 0;\r\n\tpadding: 0;\r\n\tmin-height: 30px;\r\n}\r\n\r\n.angular-ui-tree-placeholders-wrapper {\r\n\tmargin-bottom: 5px;\r\n}\r\n\r\n.angular-ui-tree-handle {\r\n\tcursor: move;\r\n\ttext-decoration: none;\r\n\tfont-weight: bold;\r\n\t-webkit-box-sizing: border-box;\r\n\t-moz-box-sizing: border-box;\r\n\tbox-sizing: border-box;\r\n\tmin-height: 20px;\r\n\tline-height: 20px;\r\n}\r\n\r\n.angular-ui-tree-handle.select {\r\n\tcursor: cell;\r\n}\r\n.angular-ui-tree-handle.copy {\r\n\tcursor: copy;\r\n}\r\n\r\n.angular-ui-tree-drag {\r\n\tposition: absolute;\r\n\tpointer-events: none;\r\n\tz-index: 999;\r\n\topacity: .8;\r\n}",
	"versioning": {
		"my_dfx_db": {
			"last_action": "1425481913",
			"status": "committed",
			"user": "admin"
		},
		"SampleGallery": {
			"last_action": "1424701861",
			"status": "committed",
			"user": "admin"
		},
		"dreamface2": {
			"last_action": "1422542418",
			"status": "committed",
			"user": "admin"
		},
		"dreamface1": {
			"last_action": "1422540709",
			"status": "committed",
			"user": "admin"
		}
	}
}